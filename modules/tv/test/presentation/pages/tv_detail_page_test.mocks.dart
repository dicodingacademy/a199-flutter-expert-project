// Mocks generated by Mockito 5.0.16 from annotations
// in tv/test/presentation/pages/tv_detail_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i8;

import 'package:flutter_bloc/flutter_bloc.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tv/domain/entities/tv_detail.dart' as _i9;
import 'package:tv/domain/usecases/get_tv_detail.dart' as _i2;
import 'package:tv/domain/usecases/get_tv_recommendations.dart' as _i3;
import 'package:tv/domain/usecases/watchlist/get_tv_watchlist_status.dart'
    as _i4;
import 'package:tv/domain/usecases/watchlist/remove_tv_watchlist.dart' as _i6;
import 'package:tv/domain/usecases/watchlist/save_tv_watchlist.dart' as _i5;
import 'package:tv/presentation/cubit/detail/tv_detail_cubit.dart' as _i7;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetTvDetail_0 extends _i1.Fake implements _i2.GetTvDetail {}

class _FakeGetTvRecommendations_1 extends _i1.Fake
    implements _i3.GetTvRecommendations {}

class _FakeGetTvWatchListStatus_2 extends _i1.Fake
    implements _i4.GetTvWatchListStatus {}

class _FakeSaveTvWatchlist_3 extends _i1.Fake implements _i5.SaveTvWatchlist {}

class _FakeRemoveTvWatchlist_4 extends _i1.Fake
    implements _i6.RemoveTvWatchlist {}

class _FakeTvDetailState_5 extends _i1.Fake implements _i7.TvDetailState {}

/// A class which mocks [TvDetailCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvDetailCubit extends _i1.Mock implements _i7.TvDetailCubit {
  MockTvDetailCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTvDetail get getTvDetail =>
      (super.noSuchMethod(Invocation.getter(#getTvDetail),
          returnValue: _FakeGetTvDetail_0()) as _i2.GetTvDetail);
  @override
  _i3.GetTvRecommendations get getTvRecommendations => (super.noSuchMethod(
      Invocation.getter(#getTvRecommendations),
      returnValue: _FakeGetTvRecommendations_1()) as _i3.GetTvRecommendations);
  @override
  _i4.GetTvWatchListStatus get getWatchListStatus => (super.noSuchMethod(
      Invocation.getter(#getWatchListStatus),
      returnValue: _FakeGetTvWatchListStatus_2()) as _i4.GetTvWatchListStatus);
  @override
  _i5.SaveTvWatchlist get saveWatchlist =>
      (super.noSuchMethod(Invocation.getter(#saveWatchlist),
          returnValue: _FakeSaveTvWatchlist_3()) as _i5.SaveTvWatchlist);
  @override
  _i6.RemoveTvWatchlist get removeWatchlist =>
      (super.noSuchMethod(Invocation.getter(#removeWatchlist),
          returnValue: _FakeRemoveTvWatchlist_4()) as _i6.RemoveTvWatchlist);
  @override
  _i7.TvDetailState get state => (super.noSuchMethod(Invocation.getter(#state),
      returnValue: _FakeTvDetailState_5()) as _i7.TvDetailState);
  @override
  _i8.Stream<_i7.TvDetailState> get stream =>
      (super.noSuchMethod(Invocation.getter(#stream),
              returnValue: Stream<_i7.TvDetailState>.empty())
          as _i8.Stream<_i7.TvDetailState>);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  _i8.Future<void> fetchTvDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#fetchTvDetail, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<void> addWatchlist(_i9.TvDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#addWatchlist, [tv]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<void> removeFromWatchlist(_i9.TvDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#removeFromWatchlist, [tv]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<void> loadWatchlistStatus(int? id) =>
      (super.noSuchMethod(Invocation.method(#loadWatchlistStatus, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i8.Future<void>);
  @override
  void emit(_i7.TvDetailState? state) =>
      super.noSuchMethod(Invocation.method(#emit, [state]),
          returnValueForMissingStub: null);
  @override
  void onChange(_i10.Change<_i7.TvDetailState>? change) =>
      super.noSuchMethod(Invocation.method(#onChange, [change]),
          returnValueForMissingStub: null);
  @override
  void addError(Object? error, [StackTrace? stackTrace]) =>
      super.noSuchMethod(Invocation.method(#addError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  void onError(Object? error, StackTrace? stackTrace) =>
      super.noSuchMethod(Invocation.method(#onError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  _i8.Future<void> close() => (super.noSuchMethod(Invocation.method(#close, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i8.Future<void>);
  @override
  String toString() => super.toString();
}
